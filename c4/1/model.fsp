const False =0
const True=1
range Bool = False..True
set BoolActions={setTrue,setFalse,[False],[True]}

BOOLVAR=VAL[False],
VAL[v:Bool]=(setTrue-> VAL[True]
				|setFalse->VAL[False]
				|[v]-> VAL[v]
).

range Card = 1..2
set TurnActions = {set1,set2,[1],[2]}
TURNVAR = TVAL[1],
TVAL[i:Card] = ( set1 -> TVAL[1]| set2 -> TVAL[2] | [i] -> TVAL[i] ).

||FLAGS =(flag1:BOOLVAR || flag2:BOOLVAR).


NEIGHBOR1=(flag1.setTrue -> turn.set1 -> TEST),
TEST=(flag2[raised:Bool] -> turn[i:Card] ->
			if(raised && i == 2) then
				(flag1.setFalse-> NEIGHBOR1)
			else
				(enter->exit->flag1.setFalse->NEIGHBOR1)
)+ {{flag1,flag2}.BoolActions, turn.TurnActions }.


NEIGHBOR2=(flag2.setTrue -> turn.set2 -> TEST),
TEST=(flag1[raised:Bool]-> turn[i:Card] ->
			if(raised && i == 1) then
				(flag2.setFalse -> NEIGHBOR2)
			else
				(enter->exit->flag2.setFalse->NEIGHBOR2)
)+ {{flag1,flag2}.BoolActions, turn.TurnActions }.


property ||MUTEX = (n1:MUTEX_1||n2:MUTEX_2).

MUTEX = (n1.enter -> n1.exit -> MUTEX | n2.enter -> n2.exit -> MUTEX).

progress ENTER1={n1.enter} //neigh 1 always gets to enter
progress ENTER2={n2.enter} //neigh 2 always gets to enter


||FIELD=(n1:NEIGHBOR1 || n2:NEIGHBOR2 || {n1,n2}::FLAGS || MUTEX ).

||GREEDY = FIELD << {flag1.setTrue, flag2.setTrue}.
